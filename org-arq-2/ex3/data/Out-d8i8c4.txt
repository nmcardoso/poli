[pcs2032@localhost Benchmarks]$  sim-outorder -issue:inorder false -decode:width 8 -issue:width 8 -commit:width 4 go.ss 50 9 2stone9.in
sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: sim-outorder -issue:inorder false -decode:width 8 -issue:width 8 -commit:width 4 go.ss 50 9 2stone9.in 

sim: simulation started @ Mon Jun 28 11:19:00 2021, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               8 # instruction decode B/W (insts/cycle)
-issue:width                8 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
Initial position from 2stone9.in
  1 B C3 
  2 W pass
  3 B G7 
  4 W D7 
  5 B G4 
  6 W C5 
  7 B B4 
  8 W B5 
  9 B E4 
 10 W F8 
 11 B G8 
 12 W F6 
 13 B G6 
 14 W F7 
 15 B F9 
 16 W E9 
 17 B G9 
 18 W E8 
 19 B A5 
 20 W A6 
 21 B A4 
 22 W C6 
 23 B F5 
 24 W G3 
 25 B E6 
 26 W C4 
 27 B D4 
 28 W H4 
 29 B F3 
 30 W B3 
 31 B C2 
 32 W H5 
 33 B G2 
 34 W H6 
 35 B H7 
 36 W D5 
 37 B H3 
 38 W B2 
 39 B E5 
 40 W C1 
 41 B D6 
 42 W C7 
 43 B B7 
 44 W E1 
 45 B B1 
 46 W D1 
 47 B A3 
 48 W C9 
 49 B A2 
 50 W B8 
 51 B E7 
 52 W A7 
 53 B F2 
 54 W pass
 55 B pass
Game over

sim: ** simulation statistics **
sim_num_insn              548177449 # total number of instructions committed
sim_num_refs              157214360 # total number of loads and stores committed
sim_num_loads             115800785 # total number of loads committed
sim_num_stores         41413575.0000 # total number of stores committed
sim_num_branches           80286693 # total number of branches committed
sim_elapsed_time                376 # total simulation time in seconds
sim_inst_rate          1457918.7473 # simulation speed (in insts/sec)
sim_total_insn            679896618 # total number of instructions executed
sim_total_refs            193121129 # total number of loads and stores executed
sim_total_loads           145649734 # total number of loads executed
sim_total_stores       47471395.0000 # total number of stores executed
sim_total_branches         98708806 # total number of branches executed
sim_cycle                 622225112 # total simulation time in cycles
sim_IPC                      0.8810 # instructions per cycle
sim_CPI                      1.1351 # cycles per instruction
sim_exec_BW                  1.0927 # total instructions (mis-spec + committed) per cycle
sim_IPB                      6.8277 # instruction per branch
IFQ_count                 969340825 # cumulative IFQ occupancy
IFQ_fcount                210276627 # cumulative IFQ full count
ifq_occupancy                1.5579 # avg IFQ occupancy (insn's)
ifq_rate                     1.0927 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.4257 # avg IFQ occupant latency (cycle's)
ifq_full                     0.3379 # fraction of time (cycle's) IFQ was full
RUU_count                3702439026 # cumulative RUU occupancy
RUU_fcount                114097282 # cumulative RUU full count
ruu_occupancy                5.9503 # avg RUU occupancy (insn's)
ruu_rate                     1.0927 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  5.4456 # avg RUU occupant latency (cycle's)
ruu_full                     0.1834 # fraction of time (cycle's) RUU was full
LSQ_count                1076143162 # cumulative LSQ occupancy
LSQ_fcount                  9857302 # cumulative LSQ full count
lsq_occupancy                1.7295 # avg LSQ occupancy (insn's)
lsq_rate                     1.0927 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  1.5828 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0158 # fraction of time (cycle's) LSQ was full
sim_slip                 4854000355 # total number of slip cycles
avg_sim_slip                 8.8548 # the average slip between issue and retirement
bpred_bimod.lookups       105231313 # total number of bpred lookups
bpred_bimod.updates        80286693 # total number of updates
bpred_bimod.addr_hits      63626259 # total number of address-predicted hits
bpred_bimod.dir_hits       64246658 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses         16040035 # total number of misses
bpred_bimod.jr_hits         5949607 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen         6146688 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP        64073 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP       117455 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.7925 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.8002 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9679 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.5455 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes      7221360 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops      7295321 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP      6029233 # total number of RAS predictions used
bpred_bimod.ras_hits.PP      5885534 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9762 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses              772497503 # total number of accesses
il1.hits                  720765254 # total number of hits
il1.misses                 51732249 # total number of misses
il1.replacements           51731737 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0670 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0670 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses              167531553 # total number of accesses
dl1.hits                  165922655 # total number of hits
dl1.misses                  1608898 # total number of misses
dl1.replacements            1608386 # total number of replacements
dl1.writebacks               817434 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0096 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0096 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0049 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses               54158581 # total number of accesses
ul2.hits                   53517323 # total number of hits
ul2.misses                   641258 # total number of misses
ul2.replacements             637162 # total number of replacements
ul2.writebacks                44254 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0118 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0118 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0008 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             772497503 # total number of accesses
itlb.hits                 772473803 # total number of hits
itlb.misses                   23700 # total number of misses
itlb.replacements             23636 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses             169470566 # total number of accesses
dtlb.hits                 169468573 # total number of hits
dtlb.misses                    1993 # total number of misses
dtlb.replacements              1870 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 621600 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                 578004 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  285 # total number of pages allocated
mem.page_mem                  1140k # total size of memory pages allocated
mem.ptab_misses              117572 # total first level page table misses
mem.ptab_accesses        4409293267 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate
